<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nf147.dao.CartMapper" >
  <resultMap id="BaseResultMap" type="com.nf147.model.Cart" >
    <id column="orderid" property="orderid" jdbcType="INTEGER" />
    <id column="itemid" property="itemid" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    
  <!--   <association property="item" column="itemid" select="selectItemByCart">
    </association> -->
    
    <!-- cart 和 item 是一对多关系 外键是itemid -->
    <collection property="itemList" column="itemid" ofType="com.nf147.model.Item"
    	javaType="ArrayList" resultMap="com.nf147.dao.ItemMapper.BaseResultMap">
    </collection>
    
  </resultMap>
  
  <!-- selectItemByCart -->
 <!--  <select id="selectItemByCart" resultMap="com.nf14747.dao.ItemMapper.BaseResultMap">
  	select *
  	from item
  	where itemid = #{itemid,jdbcType=VARCHAR}
  </select> -->
  
  <!-- 调用存储过程pro_queryCart -->
  <select id="queryCart" parameterType="java.util.Map" 
  	statementType="CALLABLE" resultMap="BaseResultMap">
  	<!-- 此处应该声明下面调用存储过程的语句为元数据，XML不会解析 -->
  	<![CDATA[
  		call pro_queryCart(
  			#{in_orderid,mode=IN,jdbcType=INTEGER}
  		)
  	]]>
  </select>
  
  <!-- 调用存储过程pro_addCart -->
  <select id="addCart" parameterType="java.util.Map" 
  	statementType="CALLABLE" resultMap="BaseResultMap">
  	<![CDATA[
  		call pro_addCart(
  			#{in_itemid,mode=IN,jdbcType=VARCHAR},
  			#{in_quantity,mode=IN,jdbcType=INTEGER}
  		)
  	]]>
  </select>
  
  <!-- 调用存储过程pro_delCart -->
  <select id="delCart" parameterType="java.util.Map" 
  	statementType="CALLABLE" resultMap="BaseResultMap">
  	<![CDATA[
  		call pro_delCart(
  			#{in_itemid,mode=IN,jdbcType=VARCHAR},
  			#{in_orderid,mode=IN,jdbcType=INTEGER}
  		)
  	]]>
  </select>
  
   <!-- 调用存储过程pro_updateCart -->
  <select id="updateCart" parameterType="java.util.Map" 
  	statementType="CALLABLE" resultMap="BaseResultMap">
  	<![CDATA[
  		call pro_updateCart(
  			#{in_itemid,mode=IN,jdbcType=VARCHAR},
  			#{in_orderid,mode=IN,jdbcType=INTEGER},
  			#{in_quantity,mode=IN,jdbcType=INTEGER}
  		)
  	]]>
  </select>
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderid, itemid, quantity
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nf147.model.CartExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.nf147.model.CartKey" >
    select 
    <include refid="Base_Column_List" />
    from cart
    where orderid = #{orderid,jdbcType=INTEGER}
      and itemid = #{itemid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.nf147.model.CartKey" >
    delete from cart
    where orderid = #{orderid,jdbcType=INTEGER}
      and itemid = #{itemid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nf147.model.CartExample" >
    delete from cart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nf147.model.Cart" >
    insert into cart (orderid, itemid, quantity
      )
    values (#{orderid,jdbcType=INTEGER}, #{itemid,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nf147.model.Cart" >
    insert into cart
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="itemid != null" >
        itemid,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="itemid != null" >
        #{itemid,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nf147.model.CartExample" resultType="java.lang.Integer" >
    select count(*) from cart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cart
    <set >
      <if test="record.orderid != null" >
        orderid = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.itemid != null" >
        itemid = #{record.itemid,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cart
    set orderid = #{record.orderid,jdbcType=INTEGER},
      itemid = #{record.itemid,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nf147.model.Cart" >
    update cart
    <set >
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
    </set>
    where orderid = #{orderid,jdbcType=INTEGER}
      and itemid = #{itemid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nf147.model.Cart" >
    update cart
    set quantity = #{quantity,jdbcType=INTEGER}
    where orderid = #{orderid,jdbcType=INTEGER}
      and itemid = #{itemid,jdbcType=VARCHAR}
  </update>
</mapper>